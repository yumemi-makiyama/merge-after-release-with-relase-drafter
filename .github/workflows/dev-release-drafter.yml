name: Release Drafter for develop branch

on:
  push:
    # branches to consider in the event; optional, defaults to all
    branches:
      - develop
  # pull_request event is required only for autolabeler
  pull_request:
    # Only following types are handled by the action, but one can default to all as well
    types: [opened, reopened, synchronize]
  # pull_request_target event is required for autolabeler to support PRs from forks
  pull_request_target:
    types: [opened, reopened, synchronize]

permissions:
  contents: read

jobs:
  update_release_draft:
    permissions:
      # write permission is required to create a github release
      contents: write
      # write permission is required for autolabeler
      # otherwise, read permission is required at least
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Generate CalVer version
        id: calver
        run: |
          TODAY=$(date "+%Y-%m-%d")

          RELEASE_TAG=$(gh release --repo ${{github.repository}} view --json tagName --jq .tagName)
          if [ "${RELEASE_TAG}" = "" ]; then
            RELEASE_TAG="${TODAY}_0"
            echo "There is no release, use ${RELEASE_TAG}"
          fi

          TAGS=(${RELEASE_TAG//_/ })
          MAJOR_VERSION=${TAGS[0]}
          PATCH_VERSION=${TAGS[1]}

          PREFIX="${VERSION_PREFIX}${TODAY}"
          if [ "${MAJOR_VERSION}" = "${PREFIX}" ]; then
            PATCH_VERSION=$(expr ${PATCH_VERSION} + 1)
            echo "There is already a release for the same date, increment patch_version: ${PATCH_VERSION}"
          else
            PATCH_VERSION=1
          fi

          VERSION="${PREFIX}_${PATCH_VERSION}"

          echo ::set-output name=version::${VERSION}
          echo "Version set to ${VERSION}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION_PREFIX: "v"
          TZ: "Asia/Tokyo"
      - uses: release-drafter/release-drafter@v5
        with:
          tag: ${{ steps.calver.outputs.version }}
          name: ${{ steps.calver.outputs.version }}
          version: ${{ steps.calver.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}